{"version":3,"file":"static/js/195.984c2e67.chunk.js","mappings":"sMACA,QAA2B,2BAA3B,EAAgE,0BAAhE,EAAqG,2BAArG,EAAwI,wB,aCExI,MAoBA,EAlBiBA,IAAA,IAAC,KAAEC,GAAMD,EAAA,OACtBC,EAAKC,KAAIC,IAAA,IAAC,GAAEC,EAAE,aAAEC,EAAY,KAAEC,EAAI,UAAEC,GAAWJ,EAAA,OAC3CK,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAgBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OACIH,UAAWC,EACXG,IAAKR,EAAY,mCAAAS,OAAsCT,GAPpD,8EAQHU,IAAKT,KACTE,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAaC,SAAEL,KAC7BE,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,cAAYJ,UAPdH,EAUJ,GAAC,E,aChBd,QAAuB,mBCgDvB,EAzCaY,KACT,MAAOf,EAAMgB,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAE/B,QAAEG,IAAYC,EAAAA,EAAAA,MA0BpB,OAxBAC,EAAAA,EAAAA,YAAU,KACL,IAAKF,EACF,OAGJD,EAAU,WAEMI,WACZ,IACA,MAAM,KAAEC,SAAeC,EAAAA,EAAAA,GAAUL,GAC7BJ,EAAQQ,EAAKxB,MACbmB,EAAU,WAKd,CAHA,MAAOO,GACHC,QAAQC,IAAIF,EAAMG,SAClBV,EAAU,WACd,GAGJW,EAAS,GACV,CAACV,KAKAb,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAArB,SAAA,CACgB,YAAXQ,IAAwBP,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,IACpB,aAAXd,IAAyBP,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAACJ,QAAS,6CACrC,aAAXX,IAA0BlB,EAAKkC,SAAUvB,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAACJ,QAAS,0CACrD,aAAXX,GAAyBlB,EAAKkC,OAAS,IAAKvB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAYC,UAACC,EAAAA,EAAAA,KAACwB,EAAQ,CAACnC,KAAMA,QAC1F,C,iCC3CX,QAA+B,mC,aCE/B,MAUA,EAVqBD,IAAkB,IAAjB,QAAE8B,GAAS9B,EAC7B,OACIY,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAoBC,SAAEmB,GAAY,C,qECHxD,MAAMO,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,QAAS,CAAC,cAAiB,gOAGhBC,EAAgBA,IACpBJ,EAASK,IAAI,sCACjBC,MAAKC,GAAYA,IACjBC,OAAMC,GAAOlB,QAAQD,MAAMmB,KAGnBC,EAAgBC,GACpBX,EAASK,IAAI,sBAAD5B,OAAuBkC,EAAK,+CAC5CL,MAAKC,GAAYA,IACjBC,OAAMC,GAAOlB,QAAQD,MAAMmB,KAGnBG,EAAa7C,GACjBiC,EAASK,IAAI,SAAD5B,OAAUV,EAAE,oBAC5BuC,MAAKC,GAAYA,IACjBC,OAAMC,GAAOlB,QAAQD,MAAMmB,KAGnBpB,EAAatB,GACjBiC,EAASK,IAAI,SAAD5B,OAAUV,EAAE,4BAC5BuC,MAAKC,GAAYA,IACjBC,OAAMC,GAAOlB,QAAQD,MAAMmB,KAGnBI,EAAgB9C,GACpBiC,EAASK,IAAI,SAAD5B,OAAUV,EAAE,mCAC5BuC,MAAKC,GAAYA,IACjBC,OAAMC,GAAOlB,QAAQD,MAAMmB,I","sources":["webpack://react-homework-template/./src/components/Cast/CastCard.module.css?fb56","components/Cast/CastCard.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/ErrorMessage/ErrorMessage.module.css?d773","components/ErrorMessage/ErrorMessage.jsx","services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CastCard\":\"CastCard_CastCard__txd7y\",\"CastImg\":\"CastCard_CastImg__kWelp\",\"CastInfo\":\"CastCard_CastInfo__pdnAr\",\"Actor\":\"CastCard_Actor__TQypT\"};","import PropTypes from 'prop-types';\nimport styles from './CastCard.module.css';\n\nconst defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst CastCard = ({ cast }) =>\n    cast.map(({ id, profile_path, name, character }) =>\n        <li key={id} className={styles.CastCard}>\n            <img\n                className={styles.CastImg}\n                src={profile_path ? `https://image.tmdb.org/t/p/w300/${profile_path}` : defaultImg}\n                alt={name} />\n            <div className={styles.CastInfo}>\n                <p className={styles.Actor}>{name}</p>\n                <p>Character: {character}</p>\n            </div>\n    \n        </li>);\n\nCastCard.propTypes = {\n    cast: PropTypes.array.isRequired\n}\n\nexport default CastCard;","// extracted by mini-css-extract-plugin\nexport default {\"Cast\":\"Cast_Cast__9bpv2\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"components/Loader/Loader\";\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\nimport CastCard from \"./CastCard\";\nimport { fetchCast } from \"services/movie-api\";\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [status, setStatus] = useState(null);\n    \n    const { movieId } = useParams();\n\n    useEffect(() => {\n         if (!movieId) {\n            return\n        }\n\n        setStatus('pending');\n\n        const getCast = async () => {\n            try {\n            const { data } = await fetchCast(movieId);\n                setCast(data.cast);\n                setStatus('resolved');\n            }\n            catch (error) {\n                console.log(error.message);\n                setStatus('rejected');\n            }\n        }\n\n        getCast();\n    }, [movieId])\n\n\n\n    return (\n        <>\n            {status === 'pending' && <Loader />}\n            {status === 'rejected' && <ErrorMessage message={'An error occured, please try again later'} />}\n            {status === 'resolved' && !cast.length && <ErrorMessage message={'No cast list available for this movie'}/>}\n            {status === 'resolved' && cast.length > 0 && <ul className={styles.Cast}><CastCard cast={cast} /></ul>}\n        </>\n        \n    )\n}\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"ErrorMessage\":\"ErrorMessage_ErrorMessage__yaGRn\"};","import PropTypes from 'prop-types';\nimport styles from './ErrorMessage.module.css';\n\nconst ErrorMessage = ({ message }) => {\n    return (\n        <p className={styles.ErrorMessage}>{message}</p>\n    )\n}\n\nErrorMessage.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\nexport default ErrorMessage;","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNWE5MzAyYWUzMmFjNmZhNzViYzA1MDhlNGM3NGMwYiIsInN1YiI6IjYzM2ZiNzc3YjRhNTQzMDA3ZGE0MzA3ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9vzJQ3wYIlY6xqrP8aWnr_LR0dOLBnKjHBDyrh1KCV0'}\n});\n\nexport const fetchTrending = () => {\n  return instance.get(`/trending/movie/day?language=en-US`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\nexport const fetchByTitle = (title) => {\n  return instance.get(`search/movie?query=${title}&include_adult=false&language=en-US&page=1`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\nexport const fetchById = (id) => {\n  return instance.get(`movie/${id}?language=en-US`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\nexport const fetchCast = (id) => {\n  return instance.get(`movie/${id}/credits?language=en-US`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\nexport const fetchReviews = (id) => {\n  return instance.get(`movie/${id}/reviews?language=en-US&page=1`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\n\n\n\n  "],"names":["_ref","cast","map","_ref2","id","profile_path","name","character","_jsxs","className","styles","children","_jsx","src","concat","alt","Cast","setCast","useState","status","setStatus","movieId","useParams","useEffect","async","data","fetchCast","error","console","log","message","getCast","_Fragment","Loader","ErrorMessage","length","CastCard","instance","axios","baseURL","headers","fetchTrending","get","then","response","catch","err","fetchByTitle","title","fetchById","fetchReviews"],"sourceRoot":""}