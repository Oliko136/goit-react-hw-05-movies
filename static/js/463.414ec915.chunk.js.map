{"version":3,"file":"static/js/463.414ec915.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.jsx","components/Loader/Loader.jsx","components/MovieInfoCard/MovieInfoCard.jsx","pages/MovieDetails.jsx","services/movie-api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n    return (\n        <p>{message}</p>\n    )\n}\n\nErrorMessage.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\nexport default ErrorMessage;","import { ColorRing } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return(\n        <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"color-ring-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"color-ring-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />)\n}\n\nexport default Loader;","import PropTypes from 'prop-types';\n\nconst MovieInfoCard = ({ info }) => {\n    const { poster_path, title, release_date, vote_average, tagline, overview, genres } = info;\n\n    const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n   \n    const releaseYear = release_date.slice(0, 4);\n    const userScore = Math.round(vote_average * 10);\n\n    const genreItem = genres.map(({ id, name }) => <li key={id}>{name}</li>);\n    return (\n        <>\n            <img\n                src={poster_path ? `https://image.tmdb.org/t/p/w300/${poster_path}` : defaultImg}\n                alt='Movie Poster' width={250} />\n            \n            <h1>{title} ({releaseYear})</h1>\n            <p>User Score: {userScore}%</p>\n\n            <h2>Overview</h2>\n            <p>{tagline}</p>\n            <p>{overview}</p>\n\n            <h2>Genres</h2>\n            {genres?.length ?\n                <ul>{genreItem}</ul> :\n                <p>No genres available for this movie</p>}\n        \n        </>\n    )\n}\n\nMovieInfoCard.propTypes = {\n    info: PropTypes.shape({\n        poster_path: PropTypes.string,\n        title: PropTypes.string,\n        release_date: PropTypes.string,\n        vote_average: PropTypes.number,\n        tagline: PropTypes.string,\n        overview: PropTypes.string,\n        genres: PropTypes.array,\n\n    }).isRequired\n}\n\nexport default MovieInfoCard;","import { useState, useEffect, useRef } from \"react\";\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport Loader from \"components/Loader/Loader\";\nimport ErrorMessage from \"components/ErrorMessage/ErrorMessage\";\nimport MovieInfoCard from \"components/MovieInfoCard/MovieInfoCard\";\nimport { fetchById } from \"services/movie-api\";\n\nconst MovieDetails = () => {\n    const [details, setDetails] = useState({});\n    const [status, setStatus] = useState(null);\n    \n    const { movieId } = useParams();\n\n    const location = useLocation();\n    const backLink = useRef(location.state?.from ?? '/');\n\n    useEffect(() => {\n        if (!movieId) {\n            return\n        }\n\n        setStatus('pending');\n\n        const getDetails = async () => {\n            try {\n            const { data } = await fetchById(movieId);\n                setDetails(data);\n                setStatus('resolved');\n            }\n            catch (error) {\n                console.log(error.message);\n                setStatus('rejected');\n            }\n        }\n\n        getDetails();\n    }, [movieId])\n\n\n    return (\n        <>\n            <Link to={backLink.current}>Go back</Link>\n            {status === 'pending' && <Loader />}\n            {status === 'rejected' && <ErrorMessage message={'An error occured, please try again later'}/>}\n            {status === 'resolved' && <MovieInfoCard info={details} />}\n            \n            <p>Additional Information</p>\n            <Link to='cast'>Cast</Link>\n            <Link to='reviews'>Reviews</Link>\n            <Outlet />\n        </>\n    )\n}\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhNWE5MzAyYWUzMmFjNmZhNzViYzA1MDhlNGM3NGMwYiIsInN1YiI6IjYzM2ZiNzc3YjRhNTQzMDA3ZGE0MzA3ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9vzJQ3wYIlY6xqrP8aWnr_LR0dOLBnKjHBDyrh1KCV0'}\n});\n\nexport const fetchTrending = () => {\n  return instance.get(`/trending/movie/day?language=en-US`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\nexport const fetchByTitle = (title) => {\n  return instance.get(`search/movie?query=${title}&include_adult=false&language=en-US&page=1`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\nexport const fetchById = (id) => {\n  return instance.get(`movie/${id}?language=en-US`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\nexport const fetchCast = (id) => {\n  return instance.get(`movie/${id}/credits?language=en-US`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\nexport const fetchReviews = (id) => {\n  return instance.get(`movie/${id}/reviews?language=en-US&page=1`)\n    .then(response => response)\n    .catch(err => console.error(err));\n}\n\n\n\n\n  "],"names":["_ref","message","_jsx","children","Loader","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","info","poster_path","title","release_date","vote_average","tagline","overview","genres","releaseYear","slice","userScore","Math","round","genreItem","map","_ref2","id","name","_jsxs","_Fragment","src","concat","alt","length","MovieDetails","_location$state$from","_location$state","details","setDetails","useState","status","setStatus","movieId","useParams","location","useLocation","backLink","useRef","state","from","useEffect","async","data","fetchById","error","console","log","getDetails","Link","to","current","ErrorMessage","MovieInfoCard","Outlet","instance","axios","baseURL","headers","fetchTrending","get","then","response","catch","err","fetchByTitle","fetchCast","fetchReviews"],"sourceRoot":""}